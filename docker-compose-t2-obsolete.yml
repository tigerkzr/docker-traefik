THIS FILE NEEDS A CLEANUP

################### CAUTION CAUTION CAUTION ###############
# These are apps that I do not use anymore or tested but found to be not useful to me. 
# Docker-compose snippets for services below worked for me when I used/tried them.
# My stack and Docker itself continue to change and evolve constantly. 
# I do not actively check or maintain these for compatibility. Therefore, there is no guarantee that they will continue to work.

########################### SERVICES
services:
  # MiFlora MQTT Daemon - BT to MQTT Daemon for MiFlora Sensors
  miflora:
    image: raymondmm/miflora-mqtt
    container_name: miflora-mqtt
    environment:
      - TZ=$TZ
    network_mode: host
    # user: "0"
    volumes:
      - $USERDIR/docker/miflora-mqtt/config:/config
    restart: unless-stopped

  # Varken - Monitor Plex, Sonarr, Radarr, and Other Data
  varken:
    image: boerderij/varken
    container_name: varken
    restart: unless-stopped
    networks:
      - t2_proxy
    volumes:
      - $USERDIR/docker/varken:/config
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
      VRKN_GLOBAL_SONARR_SERVER_IDS: 1
      VRKN_GLOBAL_RADARR_SERVER_IDS: 1
      VRKN_GLOBAL_LIDARR_SERVER_IDS: "false"
      VRKN_GLOBAL_TAUTULLI_SERVER_IDS: 1
      VRKN_GLOBAL_OMBI_SERVER_IDS: "false"
      VRKN_GLOBAL_SICKCHILL_SERVER_IDS: "false"
      VRKN_GLOBAL_UNIFI_SERVER_IDS: 1
      VRKN_INFLUXDB_URL: $SERVER_IP
      VRKN_INFLUXDB_PORT: 8086
      VRKN_INFLUXDB_SSL: "false"
      VRKN_INFLUXDB_VERIFY_SSL: "false"
      VRKN_INFLUXDB_USERNAME: $VARKEN_USER
      VRKN_INFLUXDB_PASSWORD: $VARKEN_PASS
      VRKN_TAUTULLI_1_URL: $SERVER_IP:$TAUTULLI_PORT
      VRKN_TAUTULLI_1_FALLBACK_IP: 1.1.1.1
      VRKN_TAUTULLI_1_APIKEY: $TAUTULLI_API_KEY
      VRKN_TAUTULLI_1_SSL: "false"
      VRKN_TAUTULLI_1_VERIFY_SSL: "false"
      VRKN_TAUTULLI_1_GET_ACTIVITY: "true"
      VRKN_TAUTULLI_1_GET_ACTIVITY_RUN_SECONDS: 30
      VRKN_TAUTULLI_1_GET_STATS: "true"
      VRKN_TAUTULLI_1_GET_STATS_RUN_SECONDS: 3600
      VRKN_SONARR_1_URL: $SERVER_IP:$SONARR_PORT
      VRKN_SONARR_1_APIKEY: $SONARR_API_KEY
      VRKN_SONARR_1_SSL: "false"
      VRKN_SONARR_1_VERIFY_SSL: "false"
      VRKN_SONARR_1_MISSING_DAYS: 7
      VRKN_SONARR_1_MISSING_DAYS_RUN_SECONDS: 300
      VRKN_SONARR_1_FUTURE_DAYS: 1
      VRKN_SONARR_1_FUTURE_DAYS_RUN_SECONDS: 300
      VRKN_SONARR_1_QUEUE: "true"
      VRKN_SONARR_1_QUEUE_RUN_SECONDS: 300
      VRKN_RADARR_1_URL: $SERVER_IP:$RADARR_PORT
      VRKN_RADARR_1_APIKEY: $RADARR_API_KEY
      VRKN_RADARR_1_SSL: "false"
      VRKN_RADARR_1_VERIFY_SSL: "false"
      VRKN_RADARR_1_QUEUE: "true"
      VRKN_RADARR_1_QUEUE_RUN_SECONDS: 300
      VRKN_RADARR_1_GET_MISSING: "true"
      VRKN_RADARR_1_GET_MISSING_RUN_SECONDS: 300
      VRKN_UNIFI_1_URL: $UNIFI_HOST
      VRKN_UNIFI_1_USERNAME: $UNIFI_USER
      VRKN_UNIFI_1_PASSWORD: $UNIFI_PASS
      VRKN_UNIFI_1_SITE: default
      VRKN_UNIFI_1_USG_NAME: USG
      VRKN_UNIFI_1_SSL: "true"
      VRKN_UNIFI_1_VERIFY_SSL: "false"
      VRKN_UNIFI_1_GET_USG_STATS_RUN_SECONDS: 300

  # xTeve - IPTV proxy for Plex
  xteve:
    image: alturismo/xteve
    container_name: xteve
    restart: unless-stopped
    # network_mode: host
    networks:
      - t2_proxy
    ports:
      - "34400:34400"
      - "1901:1900"
    # user: "0"
    # logging:
    #   options:
    #     max-size: "10m"
    #     max-files: 3
    environment:
      TZ: $TZ
    volumes:
      - $USERDIR/docker/xteve:/config:rw
      - /dev/shm:/tmp/xteve
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.xteve-rtr.entrypoints=https"
      - "traefik.http.routers.xteve-rtr.rule=Host(`xteve.$DOMAINNAME`)"
      - "traefik.http.routers.xteve-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.xteve-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.xteve-rtr.service=xteve-svc"
      - "traefik.http.services.xteve-svc.loadbalancer.server.port=34400"

  # Cloud IDE - Editing
  cloud9:
    image: linuxserver/cloud9
    container_name: cloud9
    restart: unless-stopped
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    ports:
      - "$CLOUD9_PORT:8000"
    volumes:
      - $USERDIR/server/scripts:/code
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
      # PASSWORD: $CLOUD9_PASSWORD
      # USERNAME: $CLOUD9_USERNAME
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.cloud9-rtr.entrypoints=https"
      - "traefik.http.routers.cloud9-rtr.rule=Host(`cloud9.$DOMAINNAME`)"
      - "traefik.http.routers.cloud9-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.cloud9-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.cloud9-rtr.service=cloud9-svc"
      - "traefik.http.services.cloud9-svc.loadbalancer.server.port=8000"

  # Cloud Commander - web file manager
  cloudcmd:
    image: coderaiser/cloudcmd
    container_name: cloudcmd
    restart: unless-stopped
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    volumes:
      - $USERDIR/docker/cloudcmd:/root
      - $USERDIR:/mnt/fs
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.cloudcmd-rtr.entrypoints=https"
      - "traefik.http.routers.cloudcmd-rtr.rule=Host(`cloudcmd.$DOMAINNAME`)"
      - "traefik.http.routers.cloudcmd-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.cloudcmd-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.cloudcmd-rtr.service=cloudcmd-svc"
      - "traefik.http.services.cloudcmd-svc.loadbalancer.server.port=8000"

  # VSCode Server - VSCode Editing
  # WARNING: This appears to change permissions of all files to PUID:PGID
  code-server:
    image: linuxserver/code-server:latest
    container_name: code-server
    restart: unless-stopped
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    ports:
      - "$CODE_SERVER_PORT:8443"
    volumes:
      - $USERDIR/docker/code-server:/config
      - $USERDIR:/home/user
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
      PASSWORD: $VSCODE_PASSWORD
      # SUDO_PASSWORD: $VSCODE_SUDO_PASSWORD
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.code-server-rtr.entrypoints=https"
      - "traefik.http.routers.code-server-rtr.rule=Host(`code.$DOMAINNAME`)"
      - "traefik.http.routers.code-server-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.code-server-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.code-server-rtr.service=code-server-svc"
      - "traefik.http.services.code-server-svc.loadbalancer.server.port=8443"

  # Cloudflare DDNS - Dynamic DNS Updater
  cloudddns:
    container_name: cloudddns
    restart: always
    image: joshava/cloudflare-ddns
    volumes:
      - $USERDIR/docker/cloudflare-ddns/config.yaml:/app/config.yaml
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ

  # SmokePing - Network latency Monitoring
  smokeping:
    image: linuxserver/smokeping:latest
    container_name: smokeping
    restart: unless-stopped
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    # ports:
    #  - "$SMOKEPING_PORT:80"
    volumes:
      - $DOCKERDIR/smokeping/config:/config
      - $DOCKERDIR/smokeping/data:/data
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.smokeping-rtr.entrypoints=https"
      - "traefik.http.routers.smokeping-rtr.rule=HostHeader(`smokeping.$DOMAINNAME`)"
      ## Middlewares
      - "traefik.http.routers.smokeping-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.smokeping-rtr.service=smokeping-svc"
      - "traefik.http.services.smokeping-svc.loadbalancer.server.port=80"

  # HA-Dockermon - Manage Docker containers in Home Assistant
  ha-dockermon:
    image: philhawthorne/ha-dockermon:latest
    container_name: ha-dockermon
    restart: unless-stopped
    networks:
      - socket_proxy
    security_opt:
      - no-new-privileges:true
    ports:
      - "$HA_DOCKERMON_PORT:8126"
    volumes:
      - $DOCKERDIR/ha-dockermon:/config
      # - /var/run/docker.sock:/var/run/docker.sock
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
      DOCKER_HOST: tcp://socket-proxy:2375

  # Postgres - Database
  postgres:
    image: postgres
    container_name: postgres
    restart: always
    security_opt:
      - no-new-privileges:true
    volumes:
      - $DOCKERDIR/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: $STATPING_DB_PASS
      POSTGRES_USER: $STATPING_DB_USER
      POSTGRES_DB: $STATPING_DB

  # UniFi Controller - Managing UniFi Network
  unifi:
    container_name: unifi
    image: jacobalberty/unifi:stable
    restart: unless-stopped
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    ports:
      - "8080:8080"
      - "8443:8443"
      - "3478:3478/udp"
      - "10001:10001/udp"
      - "6789:6789"
    volumes:
      - ${DOCKERDIR}/unifi:/unifi
    environment:
      UNIFI_UID: $PUID
      UNIFI_GID: $PGID
      TZ: America/New_York
      RUNAS_UID0: "false"
      BIND_PRIV: "false"
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.unifi-rtr.entrypoints=https"
      - "traefik.http.routers.unifi-rtr.rule=HostHeader(`ufi.$DOMAINNAME`)"
      ## Middlewares
      - "traefik.http.routers.unifi-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.unifi-rtr.service=unifi-svc"
      - "traefik.http.services.unifi-svc.loadbalancer.server.port=8443"

  # Ouroboros - Automatic Docker Container Updates
  ouroboros:
    image: pyouroboros/ouroboros:latest
    container_name: ouroboros
    restart: unless-stopped
    networks:
      - default
      - socket_proxy
    # depends_on:
    #  - socket-proxy
    volumes:
      # - /var/run/docker.sock:/var/run/docker.sock # Use Docker Socket Proxy instead for improved security
      - $DOCKERDIR/ouroboros/config.json:/root/.docker/config.json:ro
    environment:
      TZ: $TZ
      INTERVAL: 86400
      LOG_LEVEL: info
      SELF_UPDATE: "true"
      CLEANUP: "true"
      IGNORE: traefik influxdb hassio_dns homeassistant hassio_supervisor addon_core_check_config addon_62c7908d_autobackup plexms
      NOTIFIERS: "tgram://$TGRAM_BOT_TOKEN/$TGRAM_CHAT_ID/"
      DOCKER_SOCKETS: tcp://socket-proxy:2375 # POST to be enabled on Socket Proxy

  # Docker Socket Proxy - Security Enchanced Proxy for Docker Socket
  socket-proxy:
    container_name: socket-proxy
    image: tecnativa/docker-socket-proxy
    restart: always
    networks:
      # t2_proxy:
      socket_proxy:
        ipv4_address: 192.168.91.254 # You can specify a static IP
    privileged: true
    ports:
      - "2375:2375"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      - LOG_LEVEL=info # debug,info,notice,warning,err,crit,alert,emerg
      ## Variables match the URL prefix (i.e. AUTH blocks access to /auth/* parts of the API, etc.).
      # 0 to revoke access.
      # 1 to grant access.
      ## Granted by Default
      - EVENTS=1
      - PING=1
      - VERSION=1
      ## Revoked by Default
      # Security critical
      - AUTH=0
      - SECRETS=0
      - POST=1 # Ouroboros
      # Not always needed
      - BUILD=0
      - COMMIT=0
      - CONFIGS=0
      - CONTAINERS=1 # Traefik, portainer, etc.
      - DISTRIBUTION=0
      - EXEC=0
      - IMAGES=1 # Portainer
      - INFO=1 # Portainer
      - NETWORKS=1 # Portainer
      - NODES=0
      - PLUGINS=0
      - SERVICES=1 # Portainer
      - SESSION=0
      - SWARM=0
      - SYSTEM=0
      - TASKS=1 # Portaienr
      - VOLUMES=1 # Portainer

  # Traefik - Custom Error Pages
  # Obsoleted because I did not spend any more time on it to customize and don't see the value
  traefik-error-pages:
    container_name: traefik-error-pages
    image: guillaumebriday/traefik-custom-error-pages
    restart: unless-stopped
    networks:
      - t2_proxy
    labels:
      - "traefik.enable=true"
      # HTTP Routers
      - "traefik.http.routers.traefik-error-pages-rtr.entrypoints=https"
      - "traefik.http.routers.traefik-error-pages-rtr.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.traefik-error-pages-rtr.priority=1"
      # Middlewares
      - "traefik.http.routers.traefik-error-pages-rtr.middlewares=traefik-error-pages"
      - "traefik.http.middlewares.traefik-error-pages.errors.service=traefik-error-pages-svc"
      - "traefik.http.middlewares.traefik-error-pages.errors.status=401,403,404,429,500,502,503"
      - "traefik.http.middlewares.traefik-error-pages.errors.query=/{status}.html"
      # HTTP Services
      - "traefik.http.routers.traefik-error-pages-rtr.service=traefik-error-pages-svc"
      - "traefik.http.services.traefik-error-pages-svc.loadbalancer.server.port=80"

  # Ombi - Media Requests
  ombi:
    image: linuxserver/ombi:latest
    container_name: ombi
    restart: unless-stopped
    networks:
      - t2_proxy
    # ports:
    #  - "$OMBI_PORT:3579"
    security_opt:
      - no-new-privileges:true
    volumes:
      - $DOCKERDIR/appdata/ombi:/config
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
      BASE_URL: /ombi #optional
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.ombi-rtr.entrypoints=https"
      - "traefik.http.routers.ombi-rtr.rule=Host(`ombi.$DOMAINNAME`)"
      ## Middlewares
      - "traefik.http.routers.ombi-rtr.middlewares=chain-no-auth@file"
      ## HTTP Services
      - "traefik.http.routers.ombi-rtr.service=ombi-svc"
      - "traefik.http.services.ombi-svc.loadbalancer.server.port=3579"

  # Emby - Media Server
  embyms:
    image: emby/embyserver:latest
    container_name: embyms
    restart: unless-stopped
    networks:
      - t2_proxy
    devices:
      - /dev/dri:/dev/dri # for harware transcoding
    security_opt:
      - no-new-privileges:true
    ports:
      - "$EMBY_PORT:8096/tcp"
      - "8920:8920/tcp"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - $DOCKERDIR/appdata/embyms:/config
      - /dev/shm:/data/transcode
      - $DATADIR/media:/data/media
      - $DATADIR/Downloads:/data/downloads
    environment:
      TZ: $TZ
      HOSTNAME: "nucEmby"
      UID: $PUID
      GID: $PGID
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.embyms-rtr.entrypoints=https"
      - "traefik.http.routers.embyms-rtr.rule=Host(`nucemby.$DOMAINNAME`)"
      ## Middlewares
      - "traefik.http.routers.embyms-rtr.middlewares=chain-no-auth@file"
      ## HTTP Services
      - "traefik.http.routers.embyms-rtr.service=embyms-svc"
      - "traefik.http.services.embyms-svc.loadbalancer.server.port=8096"

  # Plex-Sync - For Syncing watched status between plex servers
  plex-sync:
    image: patsissons/plex-sync:develop
    container_name: plex-sync
    security_opt:
      - no-new-privileges:true
    environment:
      INITIAL_RUN: "true"
      # DRY_RUN: 0
      CRON_SCHEDULE: "*/5 * * * *"
      SECTION_MAPS: $SYN_PLEX/$SYN_PLEX_HOLLYWOOD $NUC_PLEX/$NUC_PLEX_HOLLYWOOD | $SYN_PLEX/$SYN_PLEX_TVSHOWS $NUC_PLEX/$NUC_PLEX_TVSHOWS | $SYN_PLEX/$SYN_PLEX_INDIAN $NUC_PLEX/$NUC_PLEX_INDIAN | $SYN_PLEX/$SYN_PLEX_KOLLYWOOD $NUC_PLEX/$NUC_PLEX_KOLLYWOOD | $SYN_PLEX/$SYN_PLEX_DOCMOVIES $NUC_PLEX/$NUC_PLEX_DOCMOVIES | $SYN_PLEX/$SYN_PLEX_DOCSHOWS $NUC_PLEX/$NUC_PLEX_DOCSHOWS | $SYN_PLEX/$SYN_PLEX_KIDSMOVIES $NUC_PLEX/$NUC_PLEX_KIDSMOVIES | $SYN_PLEX/$SYN_PLEX_INTERNATIONAL $NUC_PLEX/$NUC_PLEX_INTERNATIONAL
    restart: unless-stopped

  # SMTP to Telegram - Send SMTP Notifications as Telegram Message
  # Use case: https://github.com/htpcBeginner/docker-traefik/issues/78
  smtp_to_telegram:
    image: kostyaesmukov/smtp_to_telegram
    container_name: smtp_to_telegram
    restart: always
    networks:
      - default
    environment:
      TZ: $TZ
      ST_TELEGRAM_CHAT_IDS: $TGRAM_CHAT_ID
      ST_TELEGRAM_BOT_TOKEN: $TGRAM_BOT_TOKEN
      ST_TELEGRAM_MESSAGE_TEMPLATE: "{subject}\\n{body}"

  # WatchTower - Automatic Docker Container Updates
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: unless-stopped
    networks:
      - socket_proxy
    depends_on:
      - socket-proxy
    environment:
      TZ: $TZ
      WATCHTOWER_CLEANUP: "true"
      WATCHTOWER_REMOVE_VOLUMES: "true"
      WATCHTOWER_INCLUDE_STOPPED: "true"
      WATCHTOWER_NO_STARTUP_MESSAGE: "false"
      WATCHTOWER_SCHEDULE: "0 30 12 * * *" # Everyday at 12:30
      WATCHTOWER_NOTIFICATIONS: shoutrrr
      WATCHTOWER_NOTIFICATION_URL: "telegram://$TGRAM_BOT_TOKEN@telegram?channels=$TGRAM_CHAT_ID"
      WATCHTOWER_NOTIFICATIONS_LEVEL: info
      DOCKER_HOST: tcp://socket-proxy:2375
      DOCKER_API_VERSION: "1.40"

  # Rclone - Google Drive Mount
  # https://github.com/openbridge/ob_bulkstash/issues/19
  # https://github.com/romancin/rclonebrowser-docker
  # https://github.com/romancin/rclonebrowser-docker
  # https://hub.docker.com/r/d2dyno/rclone-gui
  rclone-drive:
    container_name: rclone-drive
    hostname: rclone-drive
    image: rclone/rclone:1.52.3 #1.50.2 # latest v1.53 and above getting 403 DownloadQuotaExceeded error.
    restart: always
    cap_add:
      - SYS_ADMIN
    security_opt:
      - apparmor:unconfined
    user: $PUID:$PGID
    command:
      "mount shb-drive: /data/shb-drive \
      --read-only \
      --use-mmap \
      --allow-other \
      --allow-non-empty \
      --dir-cache-time=1000h \
      --poll-interval=15s \
      --uid=1000 \
      --gid=1000 \
      --buffer-size=128M \
      --umask=002 \
      --drive-chunk-size=128M \
      --user-agent=dvm300drive \
      --cache-dir=/data/cache/shb-drive \
      --vfs-cache-mode=full \
      --vfs-cache-max-age=336h \
      --vfs-cache-max-size=768G \
      --vfs-read-chunk-size=16M \
      --vfs-read-chunk-size-limit=256M \
      --log-file /config/rclone/logs/shb-drive.log \
      --log-level NOTICE"
      #--bwlimit 150M \
      #--bwlimit-file 40M \
    devices:
      - /dev/fuse
    volumes:
      - $DOCKERDIR/appdata/rclone:/config/rclone
      - /media/shb-drive:/data/shb-drive:shared
      - /media/hdd1/cache/shb-drive:/data/cache/shb-drive
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
      - /etc/fuse.conf:/etc/fuse.conf:ro
    environment:
      - TZ=$TZ

  # Rclone - Google Drive Mount
  rclone-crypt:
    container_name: rclone-crypt
    hostname: rclone-crypt
    image: rclone/rclone:1.52.3 #1.50.2 # latest v1.53 and above getting 403 DownloadQuotaExceeded error.
    restart: always
    cap_add:
      - SYS_ADMIN
    security_opt:
      - apparmor:unconfined
    user: $PUID:$PGID
    command:
      "mount shb-crypt: /data/shb-crypt \
      --use-mmap \
      --allow-other \
      --allow-non-empty \
      --dir-cache-time=1000h \
      --poll-interval=15s \
      --uid=1000 \
      --gid=1000 \
      --buffer-size=128M \
      --umask=002 \
      --drive-chunk-size=128M \
      --user-agent=dvm300crypt \
      --cache-dir=/data/cache/shb-crypt \
      --vfs-cache-mode=full \
      --vfs-cache-max-age=336h \
      --vfs-cache-max-size=512G \
      --vfs-read-chunk-size=16M \
      --vfs-read-chunk-size-limit=256M \
      --log-file /config/rclone/logs/shb-crypt.log \
      --log-level NOTICE"
      #--bwlimit 3M \
      # 3M approxmimately equals 253 GB limit per day
      # previously buffer 256 buffer 256 chunk size 128 read and limit off
    devices:
      - /dev/fuse
    volumes:
      - $DOCKERDIR/appdata/rclone:/config/rclone
      - /media/shb-crypt:/data/shb-crypt:shared
      - /media/hdd1/cache/shb-crypt:/data/cache/shb-crypt
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
      - /etc/fuse.conf:/etc/fuse.conf:ro
    environment:
      - TZ=$TZ

  # MergerFS - A featureful union filesystem
  mergerfs:
    container_name: mergerfs
    hostname: mergerfs
    image: hotio/mergerfs:latest
    restart: always
    depends_on:
      - rclone-drive
      - rclone-crypt
    user: $PUID:$PGID
    command: "/data/media-local:/data/media-crypt:/data/media-drive=RO \
      /data/media \
      -o rw,\
      use_ino,\
      allow_other,\
      func.getattr=newest,\
      category.action=all,\
      category.create=ff,\
      statfs_ignore=nc,\
      cache.files=auto-full,\
      func.getattr=newest,\
      dropcacheonclose=true,\
      nonempty"
    cap_add:
      - SYS_ADMIN
    security_opt:
      - apparmor:unconfined
    devices:
      - /dev/fuse
    environment:
      - TZ=$TZ
    volumes:
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
      - /etc/fuse.conf:/etc/fuse.conf:shared
      #- $DATADIR:/data:slave # creates local-media and shb-media on host
      - $DATADIR/local/media:/data/media-local:rshared
      - /media/shb-drive/media:/data/media-drive:rshared
      - /media/shb-crypt/media:/data/media-crypt:rshared
      - $DATADIR/media:/data/media:rshared

  # digikam - Photo Management
  digikam:
    image: ghcr.io/linuxserver/digikam
    container_name: digikam
    restart: unless-stopped
    networks:
      - t2_proxy
    volumes:
      - $DOCKERDIR/appdata/digikam:/config
      - $DATADIR/photos:/data/photos
    #ports:
    #  - 3000:3000
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.digikam-rtr.entrypoints=https"
      - "traefik.http.routers.digikam-rtr.rule=Host(`digikam.$DOMAINNAME0`)"
      ## Middlewares
      - "traefik.http.routers.digikam-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.digikam-rtr.service=digikam-svc"
      - "traefik.http.services.digikam-svc.loadbalancer.server.port=3000"

  # PlexTraktSync
  # Create Trakt Application https://github.com/Taxel/PlexTraktSync
  # Had to run this first before starting compose
  # git clone -b plexmovieagent-fixed https://github.com/Taxel/PlexTraktSync.git /home/USER/docker/apps/
  # sudo docker run -it --name ptsync -v /home/USER/docker/apps/PlexTraktSync:/usr/src/app -e TZ="America/New_York" --restart on-failure:2 twolaw/plextraktsync:latest
  # change permissions of .env and .pytrakt.json to 600 and root:root
  ptsync:
    image: twolaw/plextraktsync:latest
    container_name: ptsync
    restart: unless-stopped
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    environment:
      TZ: $TZ
    volumes:
      - $DOCKERDIR/apps/pts-mafixed:/usr/src/app # plexmovieagent-fixed branch

  # Tiny Media Manager - Media and Metadata Management Tool
  tinymm:
    image: romancin/tinymediamanager:latest
    container_name: tinymm
    restart: "no"
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    # ports:
    #   - "$TINYMM_PORT:5800"
    volumes:
      - $DOCKERDIR/appdata/tinymm:/config
      - $DATADIR/media:/data/media
      - $DATADIR/downloads:/data/downloads
    environment:
      USER_ID: $PUID
      GROUP_ID: $PGID
      TZ: $TZ
      UMASK: 002
      KEEP_APP_RUNNING: 1
      CLEAN_TMP_DIR: 1
      DISPLAY_WIDTH: 1600
      DISPLAY_HEIGHT: 960
      VNC_PASSWD: $TINYMM_VNC_PASSWD
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.tinymm-rtr.entrypoints=https"
      - "traefik.http.routers.tinymm-rtr.rule=Host(`tmm.$DOMAINNAME0`)"
      ## Middlewares
      - "traefik.http.routers.tinymm-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.tinymm-rtr.service=tinymm-svc"
      - "traefik.http.services.tinymm-svc.loadbalancer.server.port=5800"

  # SABnzbd - Binary newsgrabber (NZB downloader)
  # Disable SABNnzbd's built-in HTTPS support for traefik proxy to work
  # Needs trailing / if using PathPrefix
  sabnzbd:
    image: linuxserver/sabnzbd:latest
    container_name: sabnzbd
    restart: always
    networks:
      t2_proxy:
        ipv4_address: 192.168.90.116
    security_opt:
      - no-new-privileges:true
    # ports:
    #  - "$SABNZBD_PORT:8080"
    volumes:
      - $DOCKERDIR/appdata/sabnzbd:/config
      - $DATADIR/downloads:/data/downloads
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
      UMASK_SET: 002
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth Bypass
      - "traefik.http.routers.sabnzbd-rtr-bypass.entrypoints=https"
      - "traefik.http.routers.sabnzbd-rtr-bypass.rule=Host(`sabnzbd.$DOMAINNAME0`) && Query(`apikey`, `$SABNZBD_API_KEY`)"
      - "traefik.http.routers.sabnzbd-rtr-bypass.priority=100"
      ## HTTP Routers Auth
      - "traefik.http.routers.sabnzbd-rtr.entrypoints=https"
      - "traefik.http.routers.sabnzbd-rtr.rule=Host(`sabnzbd.$DOMAINNAME0`)"
      - "traefik.http.routers.sabnzbd-rtr.priority=99"
      ## Middlewares
      - "traefik.http.routers.sabnzbd-rtr-bypass.middlewares=chain-no-auth@file"
      - "traefik.http.routers.sabnzbd-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.sabnzbd-rtr.service=sabnzbd-svc"
      - "traefik.http.routers.sabnzbd-rtr-bypass.service=sabnzbd-svc"
      - "traefik.http.services.sabnzbd-svc.loadbalancer.server.port=8080"

  # CloudPlow - Rclone remote uploader/syncer
  cloudplow:
    image: sabrsorensen/alpine-cloudplow
    container_name: cloudplow
    restart: "no"
    security_opt:
      - no-new-privileges:true
    volumes:
      - $DOCKERDIR/appdata/cloudplow:/config/:rw
      - $DOCKERDIR/appdata/rclone:/rclone_config/:rw
      #- /home/<user>/google_drive_service_accounts:/service_accounts/:rw
      - $DATADIR/media:/data/media:rw
      - /etc/localtime:/etc/localtime:ro
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - CLOUDPLOW_CONFIG=/config/config.json
      - CLOUDPLOW_LOGFILE=/config/cloudplow.log
      - CLOUDPLOW_LOGLEVEL=DEBUG
      - CLOUDPLOW_CACHEFILE=/config/cache.db

  # Ampache - Music Server
  ampache:
    container_name: ampache
    image: ampache/ampache:nosql
    restart: "no"
    # profiles:
    # - media
    networks:
      - t2_proxy
      - default
    security_opt:
      - no-new-privileges:true
    # ports:
    #   - "$AMPACHE_PORT:80"
    volumes:
      - $DOCKERDIR/appdata/ampache/config:/var/www/config
      - $DOCKERDIR/appdata/ampache/log:/var/log/ampache
      - $DATADIR/media/music:/media
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.ampache-rtr.entrypoints=https"
      - "traefik.http.routers.ampache-rtr.rule=Host(`amp.$DOMAINNAME0`)"
      ## Middlewares
      - "traefik.http.routers.ampache-rtr.middlewares=chain-no-auth@file"
      ## HTTP Services
      - "traefik.http.routers.ampache-rtr.service=ampache-svc"
      - "traefik.http.services.ampache-svc.loadbalancer.server.port=80"

  # Gonic - Music Server
  gonic:
    container_name: gonic
    image: sentriz/gonic:latest
    restart: "no"
    # profiles:
    # - media
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    # ports:
    #   - "$GONIC_PORT:80"
    volumes:
      - $DOCKERDIR/appdata/gonic/data:/data
      - $DOCKERDIR/appdata/gonic/podcasts:/podcasts
      - $DATADIR/transcode/gonic:/cache
      - $DATADIR/media/music:/music:ro
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.gonic-rtr.entrypoints=https"
      - "traefik.http.routers.gonic-rtr.rule=Host(`gonic.$DOMAINNAME0`)"
      ## Middlewares
      - "traefik.http.routers.gonic-rtr.middlewares=chain-no-auth@file"
      ## HTTP Services
      - "traefik.http.routers.gonic-rtr.service=gonic-svc"
      - "traefik.http.services.gonic-svc.loadbalancer.server.port=80"

  # AirSonic - Music Server
  airsonic:
    container_name: airsonic
    image: linuxserver/airsonic:latest
    restart: "no"
    # profiles:
    # - media
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    # ports:
    #   - "$AIRSONIC_PORT:4040"
    volumes:
      - $DOCKERDIR/appdata/airsonic/podcasts:/podcasts
      - $DOCKERDIR/appdata/airsonic/playlists:/playlists
      - $DOCKERDIR/appdata/airsonic/config:/config
      - $DATADIR/media/music:/data/media/music
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - JAVA_OPTS=-Dserver.use-forward-headers=true
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.airsonic-rtr.entrypoints=https"
      - "traefik.http.routers.airsonic-rtr.rule=Host(`proxair.$DOMAINNAME0`)"
      ## Middlewares
      - "traefik.http.routers.airsonic-rtr.middlewares=chain-no-auth@file"
      ## HTTP Services
      - "traefik.http.routers.airsonic-rtr.service=airsonic-svc"
      - "traefik.http.services.airsonic-svc.loadbalancer.server.port=4040"

  # MusicBrainz - Music Library Tagging and Management
  musicbrainz:
    image: ghcr.io/linuxserver/musicbrainz
    container_name: musicbrainz
    restart: "no"
    # profiles:
    # - media
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    # ports:
    #   - "$MUSICBRAINZ_PORT:5000"
    volumes:
      - $DOCKERDIR/appdata/musicbrainz/config:/config
      - $DATADIR/temp/docker/appdata/musicbrainz/data:/data
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
      FILE__BRAINZCODE: /run/secrets/brainzcode
      WEBADDRESS: $SERVER_IP
      #NPROC: <parameter> #optional
    secrets:
      - brainzcode
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.musicbrainz-rtr.entrypoints=https"
      - "traefik.http.routers.musicbrainz-rtr.rule=Host(`brainz.$DOMAINNAME0`)"
      ## Middlewares
      - "traefik.http.routers.musicbrainz-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.musicbrainz-rtr.service=musicbrainz-svc"
      - "traefik.http.services.musicbrainz-svc.loadbalancer.server.port=5000"

  # Unmanic - Library Optimizer
  unmanic:
    image: josh5/unmanic:latest
    container_name: unmanic
    restart: "no"
    # profiles:
    # - media
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    # ports:
    #   - "$UNMANIC_PORT:8888"
    volumes:
      - $DATADIR/media/videos:/library
      - $DOCKERDIR/appdata/unmanic:/config
      - $DATADIR/temp/transcode/unmanic:/tmp/unmanic
    environment:
      PUID: $PUID
      PGID: $PGID
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.unmanic-rtr.entrypoints=https"
      - "traefik.http.routers.unmanic-rtr.rule=Host(`manic.$DOMAINNAME0`)"
      ## Middlewares
      - "traefik.http.routers.unmanic-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.unmanic-rtr.service=unmanic-svc"
      - "traefik.http.services.unmanic-svc.loadbalancer.server.port=8888"

  # Home Assistant Core - Home Automation
  # Added temporarily since HASS.io (Home Assistant Supervised) on Docker has been deprecated.
  homeassistant:
    container_name: hass-core
    restart: unless-stopped
    image: homeassistant/home-assistant:2021.1.5
    network_mode: host
    #    networks:
    #      - t2_proxy
    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0
      - /dev/ttyUSB1:/dev/ttyUSB1
      - /dev/ttyACM0:/dev/ttyACM0
    privileged: true
    volumes:
      - $USERDIR/docker/homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
      #- /media/ssd/motioneye:/media/motioneye
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    labels:
      ## Exclude From Watchtower
      - "com.centurylinklabs.watchtower.enable=false"

  # Home Assistant Core - Home Automation
  # If you want Home Assistant, use the one above. This is was old setup. I am still migrating things from this one to Home Assistant Core Above.
  # Added temporarily since HASS.io (Home Assistant Supervised) on Docker has been deprecated.
  hassio:
    container_name: hassio
    restart: unless-stopped
    image: homeassistant/home-assistant:0.111.0
    networks:
      - t2_proxy
    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0
      - /dev/ttyUSB1:/dev/ttyUSB1
      - /dev/ttyACM0:/dev/ttyACM0
    ports:
      - target: 8123
        published: $HOMEASSISTANT_PORT
        protocol: tcp
        mode: host
    privileged: true
    volumes:
      - $USERDIR/docker/hassio/homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
      - $USERDIR/docker/shared:/shared
      - $USERDIR/docker/open-zwave:/open-zwave
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    labels:
      ## Exclude From Watchtower
      - "com.centurylinklabs.watchtower.enable=false"

  # MotionEye - Video Surveillance
  motioneye:
    image: ccrisan/motioneye:master-amd64
    container_name: motioneye
    restart: unless-stopped
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    ports:
      - "$MOTIONEYE_CAM1:8081"
      - "$MOTIONEYE_CAM2:8082"
      - "$MOTIONEYE_CAM3:8083"
      - "$MOTIONEYE_PORT:8765"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - $DOCKERDIR/shared:/shared
      - $DOCKERDIR/motioneye/etc:/etc/motioneye
      - $DOCKERDIR/motioneye/merged:/var/lib/motioneye # merged = local + google drive, using rclone and mergerfs
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth Bypass
      # - "traefik.http.routers.motioneye-rtr-bypass.entrypoints=https"
      # - "traefik.http.routers.motioneye-rtr-bypass.rule=Headers(`$MOTIONEYE_BYPASS_KEY`, `$MOTIONEYE_BYPASS_VALUE`)"
      # - "traefik.http.routers.motioneye-rtr-bypass.priority=100"
      ## HTTP Routers Auth
      - "traefik.http.routers.motioneye-rtr.entrypoints=https"
      - "traefik.http.routers.motioneye-rtr.rule=Host(`meye.$DOMAINNAME`)"
      - "traefik.http.routers.motioneye-rtr.priority=99"
      ## Middlewares
      # - "traefik.http.routers.motioneye-rtr-bypass.middlewares=chain-no-auth@file"
      - "traefik.http.routers.motioneye-rtr.middlewares=chain-no-auth@file"
      ## HTTP Services
      - "traefik.http.routers.motioneye-rtr.service=motioneye-svc"
      # - "traefik.http.routers.motioneye-rtr-bypass.service=motioneye-svc"
      - "traefik.http.services.motioneye-svc.loadbalancer.server.port=8765"

  # APCUPSD - APC UPS Management
  # create the apcupsd.conf file
  apcupsd:
    image: gersilex/apcupsd:latest
    container_name: apcupsd
    restart: unless-stopped
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    ports:
      - "$APCUPSD_PORT:3551"
    privileged: true
    tty: true
    volumes:
      - /tmp/apcupsd-docker:/tmp/apcupsd-docker
      - $DOCKERDIR/apcupsd/apcupsd.conf:/etc/apcupsd/apcupsd.conf
      - $DOCKERDIR/apcupsd/doshutdown:/etc/apcupsd/doshutdown
      - $DOCKERDIR/apcupsd/apcupsd.events:/var/log/apcupsd.events



  # UniFi Controller - Managing UniFi Network
  # UDP 3478 Port used for STUN. #REQUIRED
  # TCP 5514 Port used for remote syslog capture.
  # TCP 8080 Port used for device and controller communication. #REQUIRED
  # TCP 8443 Port used for controller GUI/API as seen in a web browser #REQUIRED
  # TCP 8880 Port used for HTTP portal redirection.
  # TCP 8843 Port used for HTTPS portal redirection.
  # TCP 6789 Port used for UniFi mobile speed test. #REQUIRED
  # TCP 27117 Port used for local-bound database communication.
  # UDP 5656-5699 Ports used by AP-EDU broadcasting.
  # UDP 10001 Port used for device discovery #REQUIRED
  # UDP 1900 Port used for "Make controller discoverable on L2 network" in controller settings.
  unifi:
    container_name: unifi
    image: jacobalberty/unifi:v6
    restart: "no"
    networks:
      t2_proxy:
        ipv4_address: 192.168.90.100
    security_opt:
      - no-new-privileges:true
    ports:
      - "8080:8080"
      - "8443:8443"
      - "3478:3478/udp"
      - "10001:10001/udp"
      - "6789:6789"
      #- "8081:8081"
      #- "8843:8843"
      #- "8880:8880"
    volumes:
      - ${DOCKERDIR}/appdata/unifi:/unifi
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      UNIFI_UID: $PUID
      UNIFI_GID: $PGID
      TZ: America/New_York
      RUNAS_UID0: "false"
      BIND_PRIV: "false"

  #PyRenamer - Easily Rename Your Files
  pyrenamer:
    image: mikenye/pyrenamer:latest
    container_name: pyrenamer
    restart: "no"
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    # ports:
    #   - "$PYRENAMER_PORT:5800"
    volumes:
      - $USERDIR/Downloads:/data/downloads:rw
      - $DOCKERDIR/appdata/pyrenamer:/config:rw
      - /media/shb-drive/data/media:/data/shb:rw
      - /media/ds918/data/media:/data/ds918:rw
      - /dev/shm:/dev/shm
    environment:
      USER_ID: $PUID
      GROUP_ID: $PGID
      TZ: $TZ
      UMASK: 002
      DISPLAY_WIDTH: 1600
      DISPLAY_HEIGHT: 960
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.pyrenamer-rtr.entrypoints=https"
      - "traefik.http.routers.pyrenamer-rtr.rule=Host(`pyrenamer.$DOMAINNAME`)"
      ## Middlewares
      - "traefik.http.routers.pyrenamer-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.pyrenamer-rtr.service=pyrenamer-svc"
      - "traefik.http.services.pyrenamer-svc.loadbalancer.server.port=5800"

  # UniFi Controller - Managing UniFi Network
  # UDP 3478 Port used for STUN. #REQUIRED
  # TCP 5514 Port used for remote syslog capture.
  # TCP 8080 Port used for device and controller communication. #REQUIRED
  # TCP 8443 Port used for controller GUI/API as seen in a web browser #REQUIRED
  # TCP 8880 Port used for HTTP portal redirection.
  # TCP 8843 Port used for HTTPS portal redirection.
  # TCP 6789 Port used for UniFi mobile speed test. #REQUIRED
  # TCP 27117 Port used for local-bound database communication.
  # UDP 5656-5699 Ports used by AP-EDU broadcasting.
  # UDP 10001 Port used for device discovery #REQUIRED
  # UDP 1900 Port used for "Make controller discoverable on L2 network" in controller settings.
  unifi:
    container_name: unifi
    image: jacobalberty/unifi:stable
    restart: unless-stopped
    networks:
      t2_proxy:
        ipv4_address: 192.168.90.100
    security_opt:
      - no-new-privileges:true
    ports:
      - "8080:8080"
      - "8443:8443"
      - "3478:3478/udp"
      - "10001:10001/udp"
      - "6789:6789"
      #- "8081:8081"
      #- "8843:8843"
      #- "8880:8880"
    volumes:
      - ${DOCKERDIR}/unifi:/unifi
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      UNIFI_UID: $PUID
      UNIFI_GID: $PGID
      TZ: America/New_York
      RUNAS_UID0: "false"
      BIND_PRIV: "false"

  # Home Assistant Core - Home Automation
  # Added temporarily since HASS.io (Home Assistant Supervised) on Docker has been deprecated.
  homeassistant:
    container_name: hass-core
    restart: unless-stopped
    image: homeassistant/home-assistant:2021.1.5
    network_mode: host
    #    networks:
    #      - t2_proxy
    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0
      - /dev/ttyUSB1:/dev/ttyUSB1
      - /dev/ttyACM0:/dev/ttyACM0
    privileged: true
    volumes:
      - $USERDIR/docker/homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
      #- /media/ssd/motioneye:/media/motioneye
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    labels:
      ## Exclude From Watchtower
      - "com.centurylinklabs.watchtower.enable=false"

  # Home Assistant Core - Home Automation
  # If you want Home Assistant, use the one above. This is was old setup. I am still migrating things from this one to Home Assistant Core Above.
  # Added temporarily since HASS.io (Home Assistant Supervised) on Docker has been deprecated.
  hassio:
    container_name: hassio
    restart: unless-stopped
    image: homeassistant/home-assistant:0.111.0
    networks:
      - t2_proxy
    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0
      - /dev/ttyUSB1:/dev/ttyUSB1
      - /dev/ttyACM0:/dev/ttyACM0
    ports:
      - target: 8123
        published: $HOMEASSISTANT_PORT
        protocol: tcp
        mode: host
    privileged: true
    volumes:
      - $USERDIR/docker/hassio/homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
      - $USERDIR/docker/shared:/shared
      - $USERDIR/docker/open-zwave:/open-zwave
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    labels:
      ## Exclude From Watchtower
      - "com.centurylinklabs.watchtower.enable=false"

  # MotionEye - Video Surveillance
  motioneye:
    image: ccrisan/motioneye:master-amd64
    container_name: motioneye
    restart: unless-stopped
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    ports:
      - "$MOTIONEYE_CAM1:8081"
      - "$MOTIONEYE_CAM2:8082"
      - "$MOTIONEYE_CAM3:8083"
      - "$MOTIONEYE_PORT:8765"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - $DOCKERDIR/shared:/shared
      - $DOCKERDIR/motioneye/etc:/etc/motioneye
      - $DOCKERDIR/motioneye/merged:/var/lib/motioneye # merged = local + google drive, using rclone and mergerfs
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth Bypass
      # - "traefik.http.routers.motioneye-rtr-bypass.entrypoints=https"
      # - "traefik.http.routers.motioneye-rtr-bypass.rule=Headers(`$MOTIONEYE_BYPASS_KEY`, `$MOTIONEYE_BYPASS_VALUE`)"
      # - "traefik.http.routers.motioneye-rtr-bypass.priority=100"
      ## HTTP Routers Auth
      - "traefik.http.routers.motioneye-rtr.entrypoints=https"
      - "traefik.http.routers.motioneye-rtr.rule=Host(`meye.$DOMAINNAME`)"
      - "traefik.http.routers.motioneye-rtr.priority=99"
      ## Middlewares
      # - "traefik.http.routers.motioneye-rtr-bypass.middlewares=chain-no-auth@file"
      - "traefik.http.routers.motioneye-rtr.middlewares=chain-no-auth@file"
      ## HTTP Services
      - "traefik.http.routers.motioneye-rtr.service=motioneye-svc"
      # - "traefik.http.routers.motioneye-rtr-bypass.service=motioneye-svc"
      - "traefik.http.services.motioneye-svc.loadbalancer.server.port=8765"

  # UniFi Controller - Managing UniFi Network
  # UDP 3478 Port used for STUN. #REQUIRED
  # TCP 5514 Port used for remote syslog capture.
  # TCP 8080 Port used for device and controller communication. #REQUIRED
  # TCP 8443 Port used for controller GUI/API as seen in a web browser #REQUIRED
  # TCP 8880 Port used for HTTP portal redirection.
  # TCP 8843 Port used for HTTPS portal redirection.
  # TCP 6789 Port used for UniFi mobile speed test. #REQUIRED
  # TCP 27117 Port used for local-bound database communication.
  # UDP 5656-5699 Ports used by AP-EDU broadcasting.
  # UDP 10001 Port used for device discovery #REQUIRED
  # UDP 1900 Port used for "Make controller discoverable on L2 network" in controller settings.
  unifi:
    container_name: unifi
    image: jacobalberty/unifi:stable
    restart: unless-stopped
    networks:
      t2_proxy:
        ipv4_address: 192.168.90.100
    security_opt:
      - no-new-privileges:true
    ports:
      - "8080:8080"
      - "8443:8443"
      - "3478:3478/udp"
      - "10001:10001/udp"
      - "6789:6789"
      #- "8081:8081"
      #- "8843:8843"
      #- "8880:8880"
    volumes:
      - ${DOCKERDIR}/unifi:/unifi
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      UNIFI_UID: $PUID
      UNIFI_GID: $PGID
      TZ: America/New_York
      RUNAS_UID0: "false"
      BIND_PRIV: "false"

  # cAdvisor - Container Advisor
  cadvisor:
    image: gcr.io/google-containers/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    networks:
      - t2_proxy
    #ports:
    #  - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    #depends_on:
    #  - redis
    # privileged: true # Only needed for CentOS, Fedora, Red Hat, etc.
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.cadvisor-rtr.entrypoints=https"
      - "traefik.http.routers.cadvisor-rtr.rule=HostHeader(`cad.$DOMAINNAME`)"
      ## Middlewares
      - "traefik.http.routers.cadvisor-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.cadvisor-rtr.service=cadvisor-svc"
      - "traefik.http.services.cadvisor-svc.loadbalancer.server.port=8080"

  # Guacamole Daemon - Needed for Guacamole
  guacd:
    image: guacamole/guacd
    container_name: guacd
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - t2_proxy

  # Guacamole - Remote desktop, SSH, on Telnet on any HTML5 Browser
  guacamole:
    image: guacamole/guacamole:latest
    container_name: guacamole
    restart: unless-stopped
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    environment:
      GUACD_HOSTNAME: guacd
      MYSQL_HOSTNAME: mariadb
      MYSQL_PORT: 3306
      MYSQL_DATABASE_FILE: /run/secrets/guac_db_name
      MYSQL_USER_FILE: /run/secrets/guac_mysql_user
      MYSQL_PASSWORD_FILE: /run/secrets/guac_mysql_password
    secrets:
      - guac_db_name
      - guac_mysql_user
      - guac_mysql_password
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.guacamole-rtr.entrypoints=https"
      - "traefik.http.routers.guacamole-rtr.rule=HostHeader(`guac.$DOMAINNAME`)"
      ## Middlewares
      - "traefik.http.routers.guacamole-rtr.middlewares=chain-authelia@file,add-guacamole"
      - "traefik.http.middlewares.add-guacamole.addPrefix.prefix=/guacamole"
      ## HTTP Services
      - "traefik.http.routers.guacamole-rtr.service=guacamole-svc"
      - "traefik.http.services.guacamole-svc.loadbalancer.server.port=8080"

  # Traefik - Custom Error Pages
  traefik-error-pages:
    container_name: traefik-error-pages
    image: guillaumebriday/traefik-custom-error-pages
    restart: unless-stopped
    networks:
      - t2_proxy
    labels:
      - "traefik.enable=true"
      # HTTP Routers
      - "traefik.http.routers.traefik-error-pages-rtr.entrypoints=https"
      - "traefik.http.routers.traefik-error-pages-rtr.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.traefik-error-pages-rtr.priority=1"
      # Middlewares
      - "traefik.http.routers.traefik-error-pages-rtr.middlewares=traefik-error-pages"
      - "traefik.http.middlewares.traefik-error-pages.errors.service=traefik-error-pages-svc"
      - "traefik.http.middlewares.traefik-error-pages.errors.status=401,403,404,429,500,502,503"
      - "traefik.http.middlewares.traefik-error-pages.errors.query=/{status}.html"
      # HTTP Services
      - "traefik.http.routers.traefik-error-pages-rtr.service=traefik-error-pages-svc"
      - "traefik.http.services.traefik-error-pages-svc.loadbalancer.server.port=80"

  # Dozzle - Real-time Docker Log Viewer
  dozzle:
    image: amir20/dozzle:latest
    container_name: dozzle
    restart: unless-stopped
    networks:
      - t2_proxy
      - socket_proxy
    depends_on:
      - socket-proxy
    security_opt:
      - no-new-privileges:true
    environment:
      DOZZLE_LEVEL: info
      DOZZLE_TAILSIZE: 300
      DOZZLE_FILTER: "status=running"
      # DOZZLE_FILTER: "label=log_me" # limits logs displayed to containers with this label
      DOCKER_HOST: tcp://socket-proxy:2375
    # volumes:
    #  - /var/run/docker.sock:/var/run/docker.sock # Use Docker Socket Proxy instead for improved security
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.dozzle-rtr.entrypoints=https"
      - "traefik.http.routers.dozzle-rtr.rule=HostHeader(`dozzle.$DOMAINNAME`)"
      ## Middlewares
      - "traefik.http.routers.dozzle-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.dozzle-rtr.service=dozzle-svc"
      - "traefik.http.services.dozzle-svc.loadbalancer.server.port=8080"

  # Redis Commander - Redis Management Tool
  rediscommander:
    container_name: rediscommander
    image: rediscommander/redis-commander:latest
    restart: unless-stopped
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    environment:
      - REDIS_HOST=redis
      - REDIS_PASSWORD=$REDIS_PASSWORD
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.rediscommander-rtr.entrypoints=https"
      - "traefik.http.routers.rediscommander-rtr.rule=HostHeader(`rediscom.$DOMAINNAME`)"
      ## Middlewares
      - "traefik.http.routers.rediscommander-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.rediscommander-rtr.service=rediscommander-svc"
      - "traefik.http.services.rediscommander-svc.loadbalancer.server.port=8081"

  # Docker Socket Proxy - Security Enchanced Proxy for Docker Socket
  socket-proxy:
    container_name: socket-proxy
    image: tecnativa/docker-socket-proxy
    restart: always
    networks:
      # t2_proxy:
      socket_proxy:
        ipv4_address: 192.168.91.254 # You can specify a static IP
    ports:
      - "127.0.0.1:2375:2375" # Port 2375 should only ever get exposed to the internal network.
    privileged: true
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      - LOG_LEVEL=info # debug,info,notice,warning,err,crit,alert,emerg
      ## Variables match the URL prefix (i.e. AUTH blocks access to /auth/* parts of the API, etc.).
      # 0 to revoke access.
      # 1 to grant access.
      ## Granted by Default
      - EVENTS=1
      - PING=1
      - VERSION=1
      ## Revoked by Default
      # Security critical
      - AUTH=0
      - SECRETS=0
      - POST=1 # Ouroboros
      # Not always needed
      - BUILD=0
      - COMMIT=0
      - CONFIGS=0
      - CONTAINERS=1 # Traefik, portainer, etc.
      - DISTRIBUTION=0
      - EXEC=0
      - IMAGES=1 # Portainer
      - INFO=1 # Portainer
      - NETWORKS=1 # Portainer
      - NODES=0
      - PLUGINS=0
      - SERVICES=1 # Portainer
      - SESSION=0
      - SWARM=0
      - SYSTEM=0
      - TASKS=1 # Portaienr
      - VOLUMES=1 # Portainer

  # Glances - System Information
  glances:
    image: nicolargo/glances:latest
    container_name: glances
    restart: unless-stopped
    privileged: true
    # network_mode: host
    networks:
      - t2_proxy
      - socket_proxy
    # depends_on:
    #   - socket-proxy
    security_opt:
      - no-new-privileges:true
    # ports:
    #   - "$GLANCES_PORT:61208"
    pid: host
    volumes:
      - $DOCKERDIR/glances/glances.conf:/glances/conf/glances.conf # Use this if you want to add a glances.conf file
      # - /var/run/docker.sock:/var/run/docker.sock:ro # Use Docker Socket Proxy instead for improved security
    environment:
      # GLANCES_OPT: "-C /glances/conf/glances.conf --quiet --export influxdb"
      GLANCES_OPT: "-w"
      DOCKER_HOST: tcp://socket-proxy:2375
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.glances-rtr.entrypoints=https"
      - "traefik.http.routers.glances-rtr.rule=Host(`glances.$DOMAINNAME`)"
      ## Middlewares
      - "traefik.http.routers.glances-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.glances-rtr.service=glances-svc"
      - "traefik.http.services.glances-svc.loadbalancer.server.port=61208"


  # Traefik Certs Dumper - Extract LetsEncrypt Certificates - Traefik2 Compatible
  certdumper:
    container_name: traefik_certdumper
    image: humenius/traefik-certs-dumper:latest
    network_mode: none
    # profiles:
    # - core
    security_opt:
      - no-new-privileges:true
    # command: --restart-containers container1,container2,container3
    volumes:
      - $DOCKERDIR/appdata/traefik2/acme:/traefik:ro
      - $DOCKERDIR/shared/certs/home:/output:rw
      # - /var/run/docker.sock:/var/run/docker.sock:ro # Only needed if restarting containers (use Docker Socket Proxy instead)
    environment:
      DOMAIN: $DOMAINNAME0

  # Photoshow - Simple Photo Viewer
  photoshow:
    <<: *common-keys-media # See EXTENSION FIELDS at the top
    image: lscr.io/linuxserver/photoshow
    container_name: photoshow
    volumes:
      - $DATADIR/media/misc:/Pictures
      - $DOCKERDIR/appdata/photoshow:/config
      - $DATADIR/temp/appdata/photoshow:/Thumbs
    environment:
      <<: *default-tz-puid-pgid
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.photoshow-rtr.entrypoints=https"
      - "traefik.http.routers.photoshow-rtr.rule=Host(`photoshow.$DOMAINNAME0`)"
      ## Middlewares
      - "traefik.http.routers.photoshow-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.photoshow-rtr.service=photoshow-svc"
      - "traefik.http.services.photoshow-svc.loadbalancer.server.port=80"

  # FunkWhale - Music Server
  funkwhale:
    <<: *common-keys-media # See EXTENSION FIELDS at the top
    container_name: funkwhale
    image: thetarkus/funkwhale
    # ports:
    #   - "$FUNKWHALE_PORT:80"
    volumes:
      - $DOCKERDIR/appdata/funkwhale:/data
      - $DATADIR/media/music:/music:ro
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - FUNKWHALE_HOSTNAME=proxfw.$DOMAINNAME0
      - NESTED_PROXY=1
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.funkwhale-rtr.entrypoints=https"
      - "traefik.http.routers.funkwhale-rtr.rule=Host(`proxfw.$DOMAINNAME0`)"
      ## Middlewares
      - "traefik.http.routers.funkwhale-rtr.middlewares=chain-no-auth@file"
      ## HTTP Services
      - "traefik.http.routers.funkwhale-rtr.service=funkwhale-svc"
      - "traefik.http.services.funkwhale-svc.loadbalancer.server.port=80"

  # Navidrome - Music Server
  navidrome:
    <<: *common-keys-media # See EXTENSION FIELDS at the top
    container_name: navidrome
    image: deluan/navidrome:latest
    # ports:
    #   - "$FUNKWHALE_PORT:4533"
    user: $PUID:$PGID
    volumes:
      - $DOCKERDIR/appdata/navidrome:/data
      - $DATADIR/media/music/English:/music/English:ro
      - $DATADIR/media/music/Kids:/music/Kids:ro
    environment:
      - TZ=$TZ
      - ND_SCANSCHEDULE=1h
      - ND_LOGLEVEL=info
      #- ND_BASEURL=""
      - ND_SESSIONTIMEOUT=24h
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.navidrome-rtr.entrypoints=https"
      - "traefik.http.routers.navidrome-rtr.rule=Host(`proxnd.$DOMAINNAME0`)"
      ## Middlewares
      - "traefik.http.routers.navidrome-rtr.middlewares=chain-no-auth@file"
      ## HTTP Services
      - "traefik.http.routers.navidrome-rtr.service=navidrome-svc"
      - "traefik.http.services.navidrome-svc.loadbalancer.server.port=4533"

  # Jackett - Torrent proxy
  # Set url_base in Jackett settings if using PathPrefix
  jackett:
    <<: *common-keys-apps # See EXTENSION FIELDS at the top
    image: lscr.io/linuxserver/jackett:latest
    container_name: jackett
    # network_mode: container:transmission-vpn
    networks:
      t2_proxy:
        ipv4_address: 192.168.90.161
    # ports:
    #  - "$JACKETT_PORT:9117"
    volumes:
      - $DOCKERDIR/appdata/jackett:/config
      - $DATADIR/downloads:/data/downloads
      - "/etc/localtime:/etc/localtime:ro"
    environment:
      <<: *default-tz-puid-pgid
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.jackett-rtr.entrypoints=https"
      - "traefik.http.routers.jackett-rtr.rule=Host(`jackett.$DOMAINNAME0`)"
      ## Middlewares
      - "traefik.http.routers.jackett-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.jackett-rtr.service=jackett-svc"
      - "traefik.http.services.jackett-svc.loadbalancer.server.port=9117"

  # NZBHydra2 - NZB meta search
  hydra:
    <<: *common-keys-apps # See EXTENSION FIELDS at the top
    image: linuxserver/nzbhydra2:latest
    container_name: hydra
    ports:
      - "$NZBHYDRA_PORT:5076"
    volumes:
      - $DOCKERDIR/appdata/hydra2:/config
      - $DATADIR/downloads:/data/downloads
    environment:
      <<: *default-tz-puid-pgid
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.hydra-rtr.entrypoints=https"
      - "traefik.http.routers.hydra-rtr.rule=Host(`hydra.$DOMAINNAME0`)"
      ## Middlewares
      - "traefik.http.routers.hydra-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.hydra-rtr.service=hydra-svc"
      - "traefik.http.services.hydra-svc.loadbalancer.server.port=5076"

  # MeTube - Youtube downloader
  # Could not get this to work - "Could not resolve name" error
  metube:
    <<: *common-keys-apps # See EXTENSION FIELDS at the top
    image: alexta69/metube
    container_name: metube
    user: $PUID:$PGID
    volumes:
      - $DATADIR/downloads/youtube:/downloads
      - $DOCKERDIR/appdata/metube/config:/config
      - $DOCKERDIR/appdata/metube/cookies:/cookies
    environment:
      - STATE_DIR=/config
      - YTDL_OPTIONS={"cookiefile":"/cookies/cookies.txt"}
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.metube-rtr.entrypoints=https"
      - "traefik.http.routers.metube-rtr.rule=Host(`metube.$DOMAINNAME0`)"
      ## Middlewares
      - "traefik.http.routers.metube-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.metube-rtr.service=metube-svc"
      - "traefik.http.services.metube-svc.loadbalancer.server.port=8081"

  # Youtube DL Material - Youtube downloader
  # Could not get this to work - "Could not resolve name" error
  youtube-dl:
    <<: *common-keys-apps # See EXTENSION FIELDS at the top
    image: tzahi12345/youtubedl-material:nightly
    container_name: youtube-dl
    volumes:
      - $DOCKERDIR/appdata/youtube-dl:/app/appdata
      - $DATADIR/downloads/youtube:/app/downloads
    environment:
      ALLOW_CONFIG_MUTATIONS: "true"
      UID: $PUID
      GID: $PGID
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.youtube-dl-rtr.entrypoints=https"
      - "traefik.http.routers.youtube-dl-rtr.rule=Host(`ytdl.$DOMAINNAME0`)"
      ## Middlewares
      - "traefik.http.routers.youtube-dl-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.youtube-dl-rtr.service=youtube-dl-svc"
      - "traefik.http.services.youtube-dl-svc.loadbalancer.server.port=17442"

  # StatPing - Status Page & Monitoring Server
  # Not adding $TZ to linuxserver/mariadb resulted in a blank page
  # Had to change default username admin in MariaDB
  # dexec into mariadb and run mysql_tzinfo_to_sql /usr/share/zoneinfo | mysql -u root mysql -p
  statping:
    <<: *common-keys-core # See EXTENSION FIELDS at the top
    image: statping/statping:latest
    container_name: statping
    networks:
      - t2_proxy
      - default
    volumes:
      - $DOCKERDIR/appdata/statping:/app
    environment:
      <<: *default-tz-puid-pgid
      DB_CONN: mysql
      DB_HOST: $MARIADB_HOST
      DB_PORT: $MARIADB_PORT
      DB_USER: $STATPING_DB_USER
      DB_PASS: $STATPING_DB_PASS
      DB_DATABASE: $STATPING_DB
      IS_DOCKER: "true"
      DISABLE_LOGS: "false"
      NAME: StatPing
      DESCRIPTION: Monitor web services
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.statping-rtr.entrypoints=https"
      - "traefik.http.routers.statping-rtr.rule=Host(`sp.$DOMAINNAME0`)"
      ## Middlewares
      - "traefik.http.routers.statping-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.statping-rtr.service=statping-svc"
      - "traefik.http.services.statping-svc.loadbalancer.server.port=8080"

  # Authelia (Lite) - Self-Hosted Single Sign-On and Two-Factor Authentication
  authelia:
    container_name: authelia
    # Check this before upgrading: https://github.com/authelia/authelia/blob/master/BREAKING.md
    image: authelia/authelia:latest
    restart: always
    networks:
      - t2_proxy
      - default
    # ports:
    #   - "9091:9091"
    volumes:
      - $DOCKERDIR/appdata/authelia:/config
    environment:
      - TZ=$TZ
      - AUTHELIA_JWT_SECRET_FILE=/run/secrets/authelia_jwt_secret
      - AUTHELIA_SESSION_SECRET_FILE=/run/secrets/authelia_session_secret
      - AUTHELIA_STORAGE_MYSQL_PASSWORD_FILE=/run/secrets/authelia_storage_mysql_password
      - AUTHELIA_NOTIFIER_SMTP_PASSWORD_FILE=/run/secrets/authelia_notifier_smtp_password
      - AUTHELIA_DUO_API_SECRET_KEY_FILE=/run/secrets/authelia_duo_api_secret_key
      #- AUTHELIA_STORAGE_ENCRYPTION_KEY_FILE=/run/secrets/authelia_storage_encryption_key
    secrets:
      - authelia_jwt_secret
      - authelia_session_secret
      - authelia_storage_mysql_password
      - authelia_notifier_smtp_password
      - authelia_duo_api_secret_key
      #- authelia_storage_encryption_key
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.authelia-rtr.entrypoints=https"
      - "traefik.http.routers.authelia-rtr.rule=Host(`authelia.$DOMAINNAME0`)"
      - "traefik.http.routers.authelia-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.authelia-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.authelia-rtr.service=authelia-svc"
      - "traefik.http.services.authelia-svc.loadbalancer.server.port=9091"

  # DupeGuru - Duplicate File/Folder Remover
  dupeguru:
    <<: *common-keys-apps # See EXTENSION FIELDS at the top
    image: jlesage/dupeguru:latest
    container_name: dupeguru
    # ports:
    #   - "$dupeguru_PORT:5800"
    volumes:
      - $USERDIR:/data/home:ro
      - $DOCKERDIR/appdata/dupeguru/config:/config:rw
      - /media/data:/data/data:rw
    environment:
      USER_ID: $PUID
      GROUP_ID: $PGID
      UMASK: 002
      TZ: $TZ
      KEEP_APP_RUNNING: 1
      CLEAN_TMP_DIR: 1
      DISPLAY_WIDTH: 1600
      DISPLAY_HEIGHT: 960
      VNC_PASSWORD: $DUPEGURU_VNC_PASSWD
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.dupeguru-rtr.entrypoints=https"
      - "traefik.http.routers.dupeguru-rtr.rule=Host(`dupe.$DOMAINNAME0`)"
      ## Middlewares
      - "traefik.http.routers.dupeguru-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.dupeguru-rtr.service=dupeguru-svc"
      - "traefik.http.services.dupeguru-svc.loadbalancer.server.port=5800"

  # Cloudflare-Companion - Automatic CNAME DNS Creation
  # Docker Compose v2.1.1 maximum - see README
  cf-companion:
    <<: *common-keys-core # See EXTENSION FIELDS at the top
    container_name: cf-companion
    image: tiredofit/traefik-cloudflare-companion:latest
    networks:
      - socket_proxy
    environment:
      - TIMEZONE=$TZ
      - TRAEFIK_VERSION=2
      - CF_TOKEN__FILE=/run/secrets/cf_token
      - TARGET_DOMAIN=home.$DOMAINNAME2 # Edit this. Either a subdomain or just $DOMAINNAME2 pointing to the IP will work. See: https://github.com/htpcBeginner/docker-traefik/issues/244.
      - DOMAIN1=$DOMAINNAME2
      - DOMAIN1_ZONE_ID=$CLOUDFLARE_ZONEID3 # Copy from Cloudflare Overview page
      - DOMAIN1_PROXIED=TRUE
      - DOCKER_HOST=tcp://socket-proxy:2375
    secrets: 
      - cf_token
    labels:
      # Add hosts specified in rules here to force cf-companion to create the CNAMEs
      # Since cf-companion creates CNAMEs based on host rules, this a workaround for non-docker/external apps
      - "traefik.http.routers.cf-companion-rtr.rule=Host(`webmin.$DOMAINNAME2`) || Host(`shellh.$DOMAINNAME2`) || Host(`syno.$DOMAINNAME2`) || Host(`ibox.$DOMAINNAME2`) || Host(`synplex.$DOMAINNAME2`) || Host(`pirpi.$DOMAINNAME2`) || Host(`pidoc.$DOMAINNAME2` || Host(`stpc.$DOMAINNAME2`)"

  # CrowdSec Dashboard
  # Uses a lot of resources. May be crowdsec's cloud dashboard or Prometheus Grafana may be a better option.
  csdash:
    <<: *common-keys-apps # See EXTENSION FIELDS at the top
    container_name: crowdsec-dashboard
    build:
      context: $DOCKERDIR/custom/
      dockerfile: Dockerfile-csdash
    depends_on:
      - crowdsec
    environment:
      - MB_DB_FILE=/data/metabase.db
      - MGID=1000
    volumes:
      - $DOCKERDIR/appdata/crowdsec/data:/metabase-data/
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.csdash-rtr.entrypoints=https"
      - "traefik.http.routers.csdash-rtr.rule=Host(`csdash.$DOMAINNAME_CLOUD_SERVER`)"
      ## Middlewares
      - "traefik.http.routers.csdash-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.csdash-rtr.service=csdash-svc"
      - "traefik.http.services.csdash-svc.loadbalancer.server.port=3000"

  youtubedl-material:
    <<: *common-keys-apps # See EXTENSION FIELDS at the top
    image: tzahi12345/youtubedl-material:latest
    container_name: youtubedl-material
    # ports:
    #   - "$YOUTUBEDLMATERIAL_PORT:17442"
    volumes:
      - $DOCKERDIR/appdata/youtubedl-material/config:/app/appdata
      - $DATADIR/downloads/youtubedl-material/audio:/app/audio
      - $DATADIR/downloads/youtubedl-material/video:/app/video
      - $DATADIR/downloads/youtubedl-material/subscriptions:/app/subscriptions
      - $DOCKERDIR/appdata/youtubedl-material/users:/app/users
    environment:
      UID: $PUID
      GID: $PGID
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.youtubedl-material-rtr.entrypoints=https"
      - "traefik.http.routers.youtubedl-material-rtr.rule=Host(`ytdl.$DOMAINNAME_CLOUD_SERVER`)"
      ## Middlewares
      - "traefik.http.routers.youtubedl-material-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.youtubedl-material-rtr.service=youtubedl-material-svc"
      - "traefik.http.services.youtubedl-material-svc.loadbalancer.server.port=17442"

  # FlareSolverr - Proxy server to bypass Cloudflare protection
  # Not sure if I need this or not. Just testing.
  flaresolverr:
    <<: *common-keys-apps # See EXTENSION FIELDS at the top
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    networks:
      t2_proxy:
        ipv4_address: 192.168.90.160
    environment:
      LOG_LEVEL: info
      LOG_HTML: false
      CAPTCHA_SOLVER: none
      TZ: $TZ
    #ports:
    #  - "8191:8191"
    restart: unless-stopped

  # HeadScale - SDN
  headscale:
    <<: *common-keys-core # See EXTENSION FIELDS at the top
    image: headscale/headscale:latest
    container_name: headscale
    volumes:
      - $DOCKERDIR/appdata/headscale/config:/etc/headscale
      - $DOCKERDIR/appdata/headscale/data:/var/lib/headscale
    #ports:
    #  - 27896:8080
    command: headscale serve
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.headscale-rtr.entrypoints=https"
      - "traefik.http.routers.headscale-rtr.rule=Host(`headscale.$DOMAINNAME_SHB`)"
      ## Middlewares
      #- "traefik.http.routers.headscale-rtr.middlewares=chain-no-auth@file"
      ## HTTP Services
      - "traefik.http.routers.headscale-rtr.service=headscale-svc"
      - "traefik.http.services.headscale-svc.loadbalancer.server.port=8080"


  # Cloudflare-Companion - Automatic CNAME DNS Creation
  cf-companion:
    <<: *common-keys-core # See EXTENSION FIELDS at the top
    container_name: cf-companion
    image: tiredofit/traefik-cloudflare-companion:latest
    networks:
      - socket_proxy
    environment:
      - TIMEZONE=$TZ
      - TRAEFIK_VERSION=2
      - CF_TOKEN__FILE=/run/secrets/cf_token
      - TARGET_DOMAIN=cdoc.$DOMAINNAME_CLOUD_SERVER # Edit this. Either a subdomain or just $DOMAINNAME_CLOUD_SERVER pointing to the IP will work. See: https://github.com/htpcBeginner/docker-traefik/issues/244.
      - DOMAIN1=$DOMAINNAME_CLOUD_SERVER
      - DOMAIN1_ZONE_ID=$CLOUDFLARE_ZONEID # Copy from Cloudflare Overview page
      - DOMAIN1_PROXIED=TRUE
      - DOCKER_HOST=tcp://socket-proxy:2375
    secrets: 
      - cf_token
    labels:
      # Add hosts specified in rules here to force cf-companion to create the CNAMEs
      # Since cf-companion creates CNAMEs based on host rules, this a workaround for non-docker/external apps
      - "traefik.http.routers.cf-companion-rtr.rule=Host(Host(`webmin.$DOMAINNAME_CLOUD_SERVER`) || Host(`shell.$DOMAINNAME_CLOUD_SERVER`) || Host(`stcdoc.$DOMAINNAME_CLOUD_SERVER`) || Host(`ag.$DOMAINNAME_CLOUD_SERVER`)"

  # Heimdall - Application Dashboard
  heimdall:
    <<: *common-keys-core # See EXTENSION FIELDS at the top
    image: lscr.io/linuxserver/heimdall
    container_name: heimdall
    # ports:
    #  - "$HEIMDALL_PORT:80" # 80 to 82 already taken by other services
      # - "444:443" # 443 used by Traefik/Nginx Proxy Manager. Disabled because we will put Heimdall behind proxy.
    volumes:
      - $DOCKERDIR/appdata/heimdall:/config
    environment:
      <<: *default-tz-puid-pgid
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.heimdall-rtr.entrypoints=https"
      - "traefik.http.routers.heimdall-rtr.rule=Host(`$DOMAINNAME_CLOUD_SERVER`,`www.$DOMAINNAME_CLOUD_SERVER`)"
      ## Middlewares
      - "traefik.http.routers.heimdall-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.heimdall-rtr.service=heimdall-svc"
      - "traefik.http.services.heimdall-svc.loadbalancer.server.port=80"